// Cynhyrchwyd y ffeil hon yn awtomatig. PEIDIWCH Ã‚ MODIWL
// This file is automatically generated. DO NOT EDIT
import {types} from '../models';
import {base} from '../models';
import {menu} from '../models';
import {project} from '../models';
import {preferences} from '../models';
import {utils} from '../models';
import {context} from '../models';
import {sdk} from '../models';
import {exports} from '../models';

export function AddAddressToProject(arg1:string):Promise<void>;

export function AddAddressesToProject(arg1:string):Promise<void>;

export function BuildDalleDressForProject():Promise<Record<string, any>>;

export function CancelAllFetches():Promise<number>;

export function CancelFetch(arg1:types.DataFacet):Promise<void>;

export function ChangeImageStorageLocation(arg1:string):Promise<void>;

export function ClearActiveProject():Promise<void>;

export function CloseProject(arg1:string):Promise<void>;

export function ConvertToAddress(arg1:string):Promise<base.Address|boolean>;

export function Encode(arg1:types.Function,arg2:Array<any>):Promise<string>;

export function FileNew(arg1:menu.CallbackData):Promise<void>;

export function FileOpen(arg1:menu.CallbackData):Promise<void>;

export function FileQuit(arg1:menu.CallbackData):Promise<void>;

export function FileSave(arg1:menu.CallbackData):Promise<void>;

export function FileSaveAs(arg1:menu.CallbackData):Promise<void>;

export function GetActiveProject():Promise<project.Project>;

export function GetActiveProjectData():Promise<types.ProjectPayload>;

export function GetActiveProjectPath():Promise<string>;

export function GetAppId():Promise<preferences.Id>;

export function GetAppPreferences():Promise<preferences.AppPreferences>;

export function GetChainList():Promise<utils.ChainList>;

export function GetContext():Promise<context.Context>;

export function GetDebugCollapsed():Promise<boolean>;

export function GetDefaultAppPreferences():Promise<preferences.AppPreferences>;

export function GetExportsPage(arg1:types.Payload,arg2:number,arg3:number,arg4:sdk.SortSpec,arg5:string):Promise<exports.ExportsPage>;

export function GetExportsSummary(arg1:types.Payload):Promise<types.Summary>;

export function GetFilename():Promise<project.Project>;

export function GetImageURL(arg1:string):Promise<string>;

export function GetLanguage():Promise<string>;

export function GetLastFacet(arg1:string):Promise<string>;

export function GetLastView():Promise<string>;

export function GetMarkdown(arg1:string,arg2:string,arg3:string):Promise<string>;

export function GetNodeStatus(arg1:string):Promise<types.MetaData>;

export function GetOpenProjects():Promise<Array<Record<string, any>>>;

export function GetOrgPreferences():Promise<preferences.OrgPreferences>;

export function GetProjectAddress():Promise<base.Address>;

export function GetRegisteredViews():Promise<Array<string>>;

export function GetTheme():Promise<string>;

export function GetUserPreferences():Promise<preferences.UserPreferences>;

export function HasActiveProject():Promise<boolean>;

export function IsInitialized():Promise<boolean>;

export function IsReady():Promise<boolean>;

export function LogFrontend(arg1:string):Promise<void>;

export function NewProject(arg1:string,arg2:string):Promise<void>;

export function OpenProjectFile(arg1:string):Promise<void>;

export function RegisterCollection(arg1:types.Collection):Promise<void>;

export function Reload(arg1:types.Payload):Promise<void>;

export function ReloadExports(arg1:types.Payload):Promise<void>;

export function RemoveAddressFromProject(arg1:string):Promise<void>;

export function ResetStore(arg1:string):Promise<void>;

export function RestoreProjectContext(arg1:string):Promise<void>;

export function SaveBounds(arg1:number,arg2:number,arg3:number,arg4:number):Promise<void>;

export function SaveProject():Promise<void>;

export function SetActiveAddress(arg1:string):Promise<void>;

export function SetActiveChain(arg1:string):Promise<void>;

export function SetActivePeriod(arg1:string):Promise<void>;

export function SetActiveProjectPath(arg1:string):Promise<void>;

export function SetAppPreferences(arg1:preferences.AppPreferences):Promise<void>;

export function SetDebugCollapsed(arg1:boolean):Promise<void>;

export function SetHelpCollapsed(arg1:boolean):Promise<void>;

export function SetInitialized(arg1:boolean):Promise<void>;

export function SetLanguage(arg1:string):Promise<void>;

export function SetLastFacet(arg1:string,arg2:string):Promise<string>;

export function SetLastView(arg1:string):Promise<string>;

export function SetMenuCollapsed(arg1:boolean):Promise<void>;

export function SetOrgPreferences(arg1:preferences.OrgPreferences):Promise<void>;

export function SetProjectAddress(arg1:base.Address):Promise<void>;

export function SetTheme(arg1:string):Promise<void>;

export function SetUserPreferences(arg1:preferences.UserPreferences):Promise<void>;

export function SetViewAndFacet(arg1:string,arg2:string):Promise<string>;

export function SwitchToProject(arg1:string):Promise<void>;

export function ValidateActiveProject():Promise<boolean>;
